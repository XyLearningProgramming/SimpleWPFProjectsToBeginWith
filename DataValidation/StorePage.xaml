<Window x:Class="DataValidation.StorePage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:data="clr-namespace:StoreDatabase;assembly=StoreDatabase"
        xmlns:local="clr-namespace:DataValidation"
		xmlns:converters="clr-namespace:DataValidation.Converters"
		xmlns:ie="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="StorePage" Height="450" Width="800">
	<Window.DataContext>
		<local:StorePageViewModel></local:StorePageViewModel>
	</Window.DataContext>
	<Window.Resources>
		<converters:NullableBoolToBoolConverter x:Key="NullableBoolToBoolConverter"></converters:NullableBoolToBoolConverter>
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"></RowDefinition>
			<RowDefinition Height="Auto"></RowDefinition>
			<RowDefinition Height="2*"></RowDefinition>
		</Grid.RowDefinitions>
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"></RowDefinition>
				<RowDefinition Height="Auto"></RowDefinition>
			</Grid.RowDefinitions>

			<ListBox Name="lstProducts" Margin="5" Padding="3" ItemsSource="{Binding Products}"
			IsEnabled="{Binding ElementName=bt_Update, Path=IsEnabled,Mode=OneWay}">
				<ie:Interaction.Triggers>
					<ie:EventTrigger EventName="SelectionChanged">
						<ie:InvokeCommandAction Command="{Binding SelectProductCommand}" 
						CommandParameter="{Binding ElementName=lstProducts, Path=SelectedItem}"/>
					</ie:EventTrigger>
				</ie:Interaction.Triggers>
				<ListBox.GroupStyle>
					<GroupStyle>
						<GroupStyle.HeaderTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Path=Name}" FontWeight="Bold" Foreground="White"
								Background="LightGreen" Margin="0,5,0,0" Padding="3"></TextBlock>
							</DataTemplate>
						</GroupStyle.HeaderTemplate>
					</GroupStyle>
				</ListBox.GroupStyle>
				<!--For each item-->
				<ListBox.ItemTemplate>
					<DataTemplate>
						<Border BorderThickness="1" BorderBrush="SteelBlue" CornerRadius="4">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding Path=ModelName}"></TextBlock>
								<TextBlock Text="  "></TextBlock>
								<TextBlock Text="{Binding Path=UnitCost, StringFormat={}{0:C}}"></TextBlock>
							</StackPanel>
						</Border>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>

			<StackPanel Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal" Margin="5,2,5,10">
				<Button Margin="2,0,0,0"  Padding="2"
				Command="{Binding RefreshCommand}" IsEnabled="{Binding IsDirty, Converter={StaticResource NullableBoolToBoolConverter}}">Refresh Products</Button>
			</StackPanel>
		</Grid>

		<GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" ResizeBehavior="PreviousAndNext"                        
              Height="5"></GridSplitter>
		<Border Grid.Row="2" Padding="7" Margin="7" Background="LightSteelBlue">
			<Grid Name="gridProductDetails"
                  Validation.Error="validationError">
				<Grid.Resources>

					<Style TargetType="{x:Type TextBox}">
						<Setter Property="Validation.ErrorTemplate">
							<Setter.Value>
								<ControlTemplate>
									<DockPanel LastChildFill="True">
										<TextBlock DockPanel.Dock="Right"
                      Foreground="Red" FontSize="14" FontWeight="Bold"
                        ToolTip="{Binding ElementName=adornerPlaceholder,
                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                               >*</TextBlock>
										<Border BorderBrush="Green" BorderThickness="1">
											<AdornedElementPlaceholder Name="adornerPlaceholder"></AdornedElementPlaceholder>
										</Border>
									</DockPanel>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="Validation.HasError" Value="true">
								<Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
							</Trigger>
						</Style.Triggers>
					</Style>
				</Grid.Resources>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"></ColumnDefinition>
					<ColumnDefinition></ColumnDefinition>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="Auto"></RowDefinition>
					<RowDefinition Height="*"></RowDefinition>
					<RowDefinition Height="Auto"></RowDefinition>
				</Grid.RowDefinitions>

				<TextBlock Margin="7">Model Number:</TextBlock>
				<TextBox Margin="5" Grid.Column="1">
					<TextBox.Text>
						<Binding Path="ModelNumber" NotifyOnValidationError="true" Mode="TwoWay">
							<Binding.ValidationRules>
								<DataErrorValidationRule></DataErrorValidationRule>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>

				<TextBlock Margin="7" Grid.Row="1">Model Name:</TextBlock>
				<TextBox Margin="5" Grid.Row="1" Grid.Column="1" Text="{Binding Path=ModelName, 
				ValidatesOnNotifyDataErrors=True,NotifyOnValidationError=True}"></TextBox>

				<TextBlock Margin="7" Grid.Row="2">Unit Cost:</TextBlock>
				<TextBox Margin="5" Grid.Row="2" Grid.Column="1">
					<TextBox.Text>
						<Binding Path="UnitCost" NotifyOnValidationError="true" StringFormat="{}{0:C}">
							<Binding.ValidationRules>
								<local:PositivePriceRule Max="999.99"></local:PositivePriceRule>
								<ExceptionValidationRule></ExceptionValidationRule>
							</Binding.ValidationRules>
						</Binding>
					</TextBox.Text>
				</TextBox>
				<TextBlock Margin="7,7,7,0" Grid.Row="3" >Description:</TextBlock>
				<TextBox Margin="7" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" 
                 VerticalScrollBarVisibility="Visible" TextWrapping="Wrap" 
				 Text="{Binding Path=Description}"></TextBox>

				<StackPanel Orientation="Horizontal" Margin="3" Grid.Row="5" Grid.ColumnSpan="2" HorizontalAlignment="Right">
					<Button x:Name="bt_Update" IsDefault="True"
                  Margin="2" Padding="10,2,10,2" Click="Button_Click" Command="{Binding UpdateProductCommand}">Update</Button>
				</StackPanel>
			</Grid>
		</Border>
	</Grid>
</Window>
